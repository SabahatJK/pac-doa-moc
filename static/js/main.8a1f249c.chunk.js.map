{"version":3,"sources":["components/connection.js","components/MOCProfile.js","components/MOCMoniker.js","components/MOCList.js","components/Data.js","components/MOCSelection.js","components/About.js","components/Home.js","components/ConnectButton.js","App.js","serviceWorker.js","index.js"],"names":["connectWallet","a","window","ethereum","request","method","addressArray","networkId","networkVersion","networkName","getNetworkName","alert","obj","status","address","message","target","rel","href","getCurrentWalletConnected","length","Number","React","createContext","Provider","useStyles","makeStyles","theme","button","margin","spacing","icon","marginRight","name","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","color","white","body","TableCell","StyledTableRow","root","action","hover","TableRow","createTheme","overrides","MuiTableContainer","width","MuiTable","MuiTableCell","padding","MuiAvatar","height","MOCProfile","props","classes","useState","details","setDetails","useParams","URI","id","state","ifpsUrl","fetch","response","json","responseData","console","error","useLayoutEffect","fetchIPFS","decodeURIComponent","className","ThemeProvider","TableContainer","component","Paper","Table","align","TableBody","Avatar","src","alt","large","variant","colSpan","Grid","Button","table","minWidth","minHeight","MOCMoniker","aria-label","to","encodeURIComponent","formControl","MOCList","walletAddress","setWallet","mocInstance","setMocInstance","ids","setIds","mocURIs","setMOCURIs","web3","Web3","givenProvider","eth","getAccounts","accounts","log","net","getId","deployedNetwork","MockCongress2","networks","sNetworkName","instance","Contract","abi","methods","mocListForState","call","from","count","i","tokenURI","useEffect","init","loadMOCList","map","uri","index","key","countries","MOCSelection","country","setCountry","region","setRegion","FormControl","InputLabel","Select","labelId","value","onChange","event","MenuItem","countryName","countryShortCode","disabled","find","regions","shortCode","About","Home","ConnectButton","setStatus","setNetworkName","connectToNetwork","on","connectWalletPressed","location","reload","walletResponse","onClick","String","substring","App","Link","RouterLink","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a1f249c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      var networkId = window.ethereum.networkVersion;\r\n      var networkName = getNetworkName(networkId);\r\n      var status = \"\";\r\n      alert(networkId);\r\n      if ((networkId !== \"42\") && (networkId !== \"5777\"))\r\n      {\r\n          status = \"You are connected to the above network, this dApp is deployed on kovan testnet, please switch to kovan\";\r\n      }\r\n      else {\r\n          status = \"\";\r\n      };\r\n      const obj = {\r\n        status: status,\r\n        address: addressArray[0],\r\n        networkId : networkId,\r\n        networkName: networkName,\r\n      };\r\n      return obj;\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status:  err.message,\r\n        networkId : \"\",\r\n        networkName: \"\",\r\n\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      networkId : \"\",\r\n      networkName: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\"   rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n\r\n      if (addressArray.length > 0) {\r\n\r\n        var networkId = window.ethereum.networkVersion;\r\n        var networkName = getNetworkName(networkId);\r\n        var status = \"\";\r\n        if ((networkId !== \"42\") && (networkId !== \"5777\"))\r\n        {\r\n            status = \"You are connected to the above network, this dApp is deployed on kovan testnet, please switch to kovan\";\r\n        }\r\n        else {\r\n            status = \"\";\r\n        };\r\n        const obj = {\r\n          status: status,\r\n          address: addressArray[0],\r\n          networkId : networkId,\r\n          networkName: networkName,\r\n        };\r\n\r\n        return obj\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the top right button.\",\r\n          networkId : \"\",\r\n          networkName: \"\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status:  err.message,\r\n        networkId : \"\",\r\n        networkName: \"\",\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\"  rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n      networkId : \"\",\r\n      networkName: \"\",\r\n    };\r\n  }\r\n};\r\n\r\nexport const getNetworkName = (networkId) => {\r\n  switch (Number(networkId)) {\r\n    case 1:\r\n      return 'Mainnet';\r\n    case 42:\r\n      return 'Kovan';\r\n    case 3:\r\n        return 'Ropsten';\r\n    case 4:\r\n        return 'Rinkeby';\r\n    case 5:\r\n      return 'Goerli';\r\n    default:\r\n      return 'Ganache';\r\n  };\r\n\r\n};\r\nexport const setNetwork = () => {\r\n\r\n  if (window.ethereum) {\r\n      var networkId = window.ethereum.networkVersion;\r\n      if (networkId !== \"\") {\r\n        var networkName = getNetworkName(networkId);\r\n        connectWallet();\r\n        if ((networkId !== \"42\") && (networkId !== \"5777\"))\r\n        {\r\n          return(\"👆🏽 This dApp is deployed on kovan testnet, please switch to kovan\");\r\n        };\r\n      };\r\n  };\r\n};\r\n\r\nexport const ConnectContext = React.createContext({});\r\nexport const ConnectProvider = ConnectContext.Provider;\r\n","//import react\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ThemeProvider } from '@material-ui/core'\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport {Grid, Button} from \"@material-ui/core\";\r\n\r\nimport {\r\n  Facebook,\r\n  Flickr,\r\n  Instagram,\r\n  Telegram,\r\n  Twitter,\r\n  Viber,\r\n  Youtube,\r\n} from \"@trejgun/material-ui-icons-social-networks\";\r\n\r\n\r\nconst useStyles = makeStyles(\r\n\r\n theme => ({\r\n   button: {\r\n     margin: theme.spacing(0),\r\n   },\r\n   icon: {\r\n     marginRight: theme.spacing(0),\r\n   },\r\n }),\r\n {name: \"social\"},\r\n\r\n);\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n//    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n      backgroundColor: theme.palette.action.hover,\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nconst theme = createTheme({\r\n    overrides: {\r\n      MuiTableContainer: {\r\n        \"root\" : {\r\n          width: \"70%\",\r\n          \"margin-left\": \"auto\",\r\n          \"margin-right\": \"auto\",\r\n\r\n        }\r\n      },\r\n      MuiTable : {\r\n        \"root\" : {\r\n        width: \"600px\",\r\n        \"margin-left\": \"auto\",\r\n        \"margin-right\": \"auto\",\r\n        }\r\n      },\r\n        MuiTableCell: {\r\n            root: {  //This can be referred from Material UI API documentation.\r\n                padding: '5px',\r\n\r\n            },\r\n        },\r\n        MuiAvatar: {\r\n          root: {\r\n            width: '150px',\r\n            height: '150px',\r\n          }\r\n        }\r\n    },\r\n});\r\n\r\n\r\n// @dev Displays the details from a file uploaded to pinata\r\nfunction MOCProfile(props)  {\r\n  const classes = useStyles();\r\n  const [details, setDetails] = useState([]);\r\n  const { id, state, URI } = useParams();\r\n\r\n  useLayoutEffect(() => {\r\n    // get details from IPFS using the url stored in listings\r\n    fetchIPFS(decodeURIComponent(URI));\r\n }, [props.URI]);\r\n\r\n  // Fetch Data from  IPFS @ ifpsUrl\r\n  async  function fetchIPFS(ifpsUrl) {\r\n    try {\r\n      // fetch\r\n      let response = await fetch(ifpsUrl);\r\n      // wait for the response, as ayunchornous\r\n      let responseData  = await response.json();\r\n      // set State\r\n      setDetails(responseData);\r\n      return (responseData);\r\n\r\n     } catch(error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n\r\n\r\nreturn (\r\n  <div className=\"main\">\r\n  <ThemeProvider  theme={theme}>\r\n      <TableContainer component={Paper}  >\r\n        <Table align=\"center\" width=\"300px\">\r\n          <TableBody>\r\n             <StyledTableRow >\r\n                <StyledTableCell align=\"left\" width=\"10%\">\r\n                  <Avatar src={details[\"Picture\"]} alt={details[\"Name\"]}  className={classes.large} variant=\"square\"/>\r\n                </StyledTableCell>\r\n                <StyledTableCell>\r\n                  <Table >\r\n                  <TableBody>\r\n                     <StyledTableRow>\r\n\r\n                        <StyledTableCell align=\"left\">\r\n                          {details[\"Type\"]} of  {details[\"State\"]}, District: {details[\"District\"]}\r\n                          <hr/>\r\n                        </StyledTableCell>\r\n\r\n                      </StyledTableRow>\r\n                      <StyledTableRow>\r\n                        <StyledTableCell align=\"left\" colSpan={1}>\r\n                            <h1>{details[\"Name\"]} </h1>\r\n                        </StyledTableCell>\r\n                        </StyledTableRow>\r\n                        <StyledTableRow>\r\n\r\n                        <StyledTableCell align=\"left\">\r\n\r\n                        <Grid>\r\n                          <div> Phone #: {details[\"Phone\"]} </div>\r\n                          <br/>\r\n                          <Button variant=\"outlined\" className={classes.button} href={details[\"facebook\"]}>\r\n                              <Facebook className={classes.icon} />\r\n                            </Button>\r\n                            <Button variant=\"outlined\" className={classes.button} href={details[\"flickr\"]}>\r\n                              <Flickr className={classes.icon} />\r\n                            </Button>\r\n                          <Button variant=\"outlined\" className={classes.button}  href={details[\"instagram\"]}>\r\n                              <Instagram className={classes.icon} />\r\n                            </Button>\r\n                          <Button variant=\"outlined\" className={classes.button} href={details[\"twitter\"]}>\r\n                              <Twitter className={classes.icon} />\r\n                            </Button>\r\n                            <Button variant=\"outlined\" className={classes.button}  href={details[\"youtube\"]}>\r\n                              <Youtube className={classes.icon} />\r\n                            </Button>\r\n                          </Grid>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                        <StyledTableRow>\r\n\r\n                        <StyledTableCell align=\"left\"> <h1>SCORE: 0.00 </h1>  </StyledTableCell>\r\n                      </StyledTableRow>\r\n                    </TableBody>\r\n                </Table>\r\n                </StyledTableCell>\r\n\r\n              </StyledTableRow>\r\n          </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    <br/>\r\n    <hr/>\r\n    <br/>\r\n    </ThemeProvider>\r\n  </div>\r\n\r\n);\r\n}\r\n\r\nexport default MOCProfile\r\n","//import react\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ThemeProvider } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { createTheme } from '@material-ui/core/styles';\r\n\r\nimport MOCProfile from \"./MOCProfile\";\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n//    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n  minWidth: 300,\r\n  minHeight: 130,\r\n\r\n  },\r\n});\r\n\r\nconst theme = createTheme({\r\n    overrides: {\r\n        MuiTableCell: {\r\n            root: {  //This can be referred from Material UI API documentation.\r\n                padding: '5px',\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\n\r\n// @dev Displays the details from a file uploaded to pinata\r\nfunction MOCMoniker(props)  {\r\n  const classes = useStyles();\r\n  const [details, setDetails] = useState([]);\r\n  const {id, state, URI} = [props.id, props.state, props.URI];\r\n  useLayoutEffect(() => {\r\n    // get details from IPFS using the url stored in listings\r\n    //alert(props.URI);\r\n    fetchIPFS(props.URI);\r\n }, [props.URI]);\r\n\r\n  // Fetch Data from  IPFS @ ifpsUrl\r\n  async  function fetchIPFS(ifpsUrl) {\r\n    try {\r\n      // fetch\r\n      let response = await fetch(ifpsUrl);\r\n      // wait for the response, as ayunchornous\r\n      let responseData  = await response.json();\r\n      // set State\r\n      setDetails(responseData);\r\n      return (responseData);\r\n\r\n     } catch(error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\nreturn (\r\n  <>\r\n  <ThemeProvider  theme={theme}>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"Details\">\r\n          <TableBody>\r\n             <StyledTableRow>\r\n                <StyledTableCell align=\"left\" colSpan={1}>\r\n                <Link to={`/MOCProfile/${props.id}/${props.state}/${encodeURIComponent(props.URI)}`} >\r\n                  <Avatar src={details[\"Picture\"]} alt={details[\"Name\"]}/>\r\n                </Link>\r\n\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\" colSpan={1}>\r\n                  <Table className={classes.table} aria-label=\"Details2\">\r\n                    <TableBody>\r\n                     <StyledTableRow>\r\n\r\n                        <StyledTableCell align=\"left\" colSpan={5}>\r\n                          {details[\"Name\"]}\r\n                        </StyledTableCell>\r\n                        </StyledTableRow>\r\n                        <StyledTableRow>\r\n                        <StyledTableCell align=\"left\"> {details[\"Type\"]} of {details[\"State\"]}, District: {details[\"District\"]} </StyledTableCell>\r\n                        </StyledTableRow>\r\n                        <StyledTableRow>\r\n                        <StyledTableCell align=\"left\"> {details[\"Offices\"]}  </StyledTableCell>\r\n                      </StyledTableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </ThemeProvider>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default MOCMoniker\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MockCongress2 from \"../contracts/MockCongress2.json\";\r\n//import getWeb3 from \"../getWeb3\";\r\nimport Web3 from 'web3';\r\nimport {\r\n  connectWallet,\r\n  getCurrentWalletConnected,\r\n  getNetworkName\r\n} from \"./connection\";\r\n\r\n\r\nimport MOCMoniker from \"./MOCMoniker\";\r\n\r\nimport \"./styles.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\nconst MOCList = (props) => {\r\n  const classes = useStyles();\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [mocInstance, setMocInstance] = useState(null);\r\n  const [ids, setIds] = useState([]);\r\n  const [mocURIs, setMOCURIs] = useState([]);\r\n\r\n  async function init()\r\n  {\r\n    // Get network provider and web3 instance.\r\n    //const web3 = getWeb3();\r\n\r\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\r\n\r\n    // Use web3 to get the user's accounts.\r\n    const accounts = await web3.eth.getAccounts();\r\n    let account =  accounts[0];\r\n    console.log(\"accounts\" + accounts[0]);\r\n\r\n    // Get the contract instance.\r\n    const networkId = await web3.eth.net.getId();\r\n\r\n    const deployedNetwork = MockCongress2.networks[networkId];\r\n\r\n    if (typeof(deployedNetwork) === \"undefined\")\r\n    {\r\n      let sNetworkName = getNetworkName(networkId)\r\n      alert(sNetworkName + \" is not supported yet, please swicth to Kovan\");\r\n      //throw new Error(sNetworkName + \" is not supported yet, please swicth to Kovan\");\r\n    }\r\n    else {\r\n      //console.log(deployedNetwork);\r\n      const instance = new web3.eth.Contract(\r\n        MockCongress2.abi,\r\n        deployedNetwork[\"address\"],\r\n      );\r\n      //console.log(\"instance\" + instance);\r\n      setWallet(accounts[0]);\r\n      setMocInstance(instance);\r\n\r\n    }\r\n  }\r\n  //function sleep (ms) {\r\n  //  return new Promise(resolve => setTimeout(resolve, ms))\r\n  //}\r\n  async function loadMOCList()  {\r\n    //alert(mocInstance);\r\n    //alert(props.state);\r\n    if ( props.state !== \"\" && mocInstance)\r\n    {\r\n      try {\r\n        //const {instance, address} = init();\r\n        // Get the value from the contract to prove it worked.\r\n        //alert(\"count\");\r\n        const ids = await mocInstance.methods.mocListForState(props.state).call({from : walletAddress});\r\n        var count = ids.length;\r\n        //alert(count);\r\n        let mocURIs = [];\r\n        var i  = 0;\r\n        for (i = 0; i < count; i++) {\r\n            mocURIs[i] = await mocInstance.methods.tokenURI(ids[i]).call({from : walletAddress});\r\n        }\r\n        setIds(ids);\r\n        setMOCURIs(mocURIs);\r\n\r\n      } catch (error) {\r\n\r\n          alert(error);\r\n          // Catch any errors for any of the above operations.\r\n          //alert(\r\n          //  `Failed to load web3, accounts, or contract. Check console for details.`,\r\n          console.error(error);\r\n          //);\r\n          throw(error);\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n  useEffect(() => {\r\n    init();\r\n  },[props.state]);\r\n\r\n\r\n  useEffect(() => {\r\n    //alert(\"in moc instance changed\");\r\n    //alert(mocInstance);\r\n    loadMOCList();\r\n  },[mocInstance]);\r\n\r\n  return (\r\n    <div className=\"box\">\r\n            {mocURIs.map((uri, index) => (\r\n                <div key={index}>\r\n                  <MOCMoniker id={ids[index]} URI= {uri} state={props.state}/>\r\n                </div>\r\n            ))}\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nexport default MOCList;\r\n","export const countries =\n[\n    {\n        \"countryName\": \"United States\",\n        \"countryShortCode\": \"US\",\n        \"regions\": [{\n                \"name\": \"Alabama\",\n                \"shortCode\": \"AL\",\n            },\n            {\n                \"name\": \"Alaska\",\n                \"shortCode\": \"AK\",\n            },\n            {\n                \"name\": \"American Samoa\",\n                \"shortCode\": \"AS\",\n            },\n            {\n                \"name\": \"Arizona\",\n                \"shortCode\": \"AZ\",\n            },\n            {\n                \"name\": \"Arkansas\",\n                \"shortCode\": \"AR\",\n            },\n            {\n                \"name\": \"California\",\n                \"shortCode\": \"CA\",\n            },\n            {\n                \"name\": \"Colorado\",\n                \"shortCode\": \"CO\",\n            },\n            {\n                \"name\": \"Connecticut\",\n                \"shortCode\": \"CT\",\n            },\n            {\n                \"name\": \"Delaware\",\n                \"shortCode\": \"DE\"\n            },\n            {\n                \"name\": \"District of Columbia\",\n                \"shortCode\": \"DC\"\n            },\n            {\n                \"name\": \"Micronesia\",\n                \"shortCode\": \"FM\"\n            },\n            {\n                \"name\": \"Florida\",\n                \"shortCode\": \"FL\"\n            },\n            {\n                \"name\": \"Georgia\",\n                \"shortCode\": \"GA\"\n            },\n            {\n                \"name\": \"Guam\",\n                \"shortCode\": \"GU\"\n            },\n            {\n                \"name\": \"Hawaii\",\n                \"shortCode\": \"HI\"\n            },\n            {\n                \"name\": \"Idaho\",\n                \"shortCode\": \"ID\"\n            },\n            {\n                \"name\": \"Illinois\",\n                \"shortCode\": \"IL\"\n            },\n            {\n                \"name\": \"Indiana\",\n                \"shortCode\": \"IN\"\n            },\n            {\n                \"name\": \"Iowa\",\n                \"shortCode\": \"IA\"\n            },\n            {\n                \"name\": \"Kansas\",\n                \"shortCode\": \"KS\"\n            },\n            {\n                \"name\": \"Kentucky\",\n                \"shortCode\": \"KY\"\n            },\n            {\n                \"name\": \"Louisiana\",\n                \"shortCode\": \"LA\"\n            },\n            {\n                \"name\": \"Maine\",\n                \"shortCode\": \"ME\"\n            },\n            {\n                \"name\": \"Marshall Islands\",\n                \"shortCode\": \"MH\"\n            },\n            {\n                \"name\": \"Maryland\",\n                \"shortCode\": \"MD\"\n            },\n            {\n                \"name\": \"Massachusetts\",\n                \"shortCode\": \"MA\"\n            },\n            {\n                \"name\": \"Michigan\",\n                \"shortCode\": \"MI\"\n            },\n            {\n                \"name\": \"Minnesota\",\n                \"shortCode\": \"MN\"\n            },\n            {\n                \"name\": \"Mississippi\",\n                \"shortCode\": \"MS\"\n            },\n            {\n                \"name\": \"Missouri\",\n                \"shortCode\": \"MO\"\n            },\n            {\n                \"name\": \"Montana\",\n                \"shortCode\": \"MT\"\n            },\n            {\n                \"name\": \"Nebraska\",\n                \"shortCode\": \"NE\"\n            },\n            {\n                \"name\": \"Nevada\",\n                \"shortCode\": \"NV\"\n            },\n            {\n                \"name\": \"New Hampshire\",\n                \"shortCode\": \"NH\"\n            },\n            {\n                \"name\": \"New Jersey\",\n                \"shortCode\": \"NJ\"\n            },\n            {\n                \"name\": \"New Mexico\",\n                \"shortCode\": \"NM\"\n            },\n            {\n                \"name\": \"New York\",\n                \"shortCode\": \"NY\"\n            },\n            {\n                \"name\": \"North Carolina\",\n                \"shortCode\": \"NC\"\n            },\n            {\n                \"name\": \"North Dakota\",\n                \"shortCode\": \"ND\"\n            },\n            {\n                \"name\": \"Northern Mariana Islands\",\n                \"shortCode\": \"MP\"\n            },\n            {\n                \"name\": \"Ohio\",\n                \"shortCode\": \"OH\"\n            },\n            {\n                \"name\": \"Oklahoma\",\n                \"shortCode\": \"OK\"\n            },\n            {\n                \"name\": \"Oregon\",\n                \"shortCode\": \"OR\"\n            },\n            {\n                \"name\": \"Palau\",\n                \"shortCode\": \"PW\"\n            },\n            {\n                \"name\": \"Pennsylvania\",\n                \"shortCode\": \"PA\"\n            },\n            {\n                \"name\": \"Puerto Rico\",\n                \"shortCode\": \"PR\"\n            },\n            {\n                \"name\": \"Rhode Island\",\n                \"shortCode\": \"RI\"\n            },\n            {\n                \"name\": \"South Carolina\",\n                \"shortCode\": \"SC\"\n            },\n            {\n                \"name\": \"South Dakota\",\n                \"shortCode\": \"SD\"\n            },\n            {\n                \"name\": \"Tennessee\",\n                \"shortCode\": \"TN\"\n            },\n            {\n                \"name\": \"Texas\",\n                \"shortCode\": \"TX\"\n            },\n            {\n                \"name\": \"Utah\",\n                \"shortCode\": \"UT\"\n            },\n            {\n                \"name\": \"Vermont\",\n                \"shortCode\": \"VT\"\n            },\n            {\n                \"name\": \"Virgin Islands\",\n                \"shortCode\": \"VI\"\n            },\n            {\n                \"name\": \"Virginia\",\n                \"shortCode\": \"VA\"\n            },\n            {\n                \"name\": \"Washington\",\n                \"shortCode\": \"WA\"\n            },\n            {\n                \"name\": \"West Virginia\",\n                \"shortCode\": \"WV\"\n            },\n            {\n                \"name\": \"Wisconsin\",\n                \"shortCode\": \"WI\"\n            },\n            {\n                \"name\": \"Wyoming\",\n                \"shortCode\": \"WY\"\n            },\n            {\n                \"name\": \"Armed Forces Americas\",\n                \"shortCode\": \"AA\"\n            },\n            {\n                \"name\": \"Armed Forces Europe, Canada, Africa and Middle East\",\n                \"shortCode\": \"AE\"\n            },\n            {\n                \"name\": \"Armed Forces Pacific\",\n                \"shortCode\": \"AP\"\n            }\n        ]\n    },\n    {\n        \"countryName\": \"United States Minor Outlying Islands\",\n        \"countryShortCode\": \"UM\",\n        \"regions\": [{\n                \"name\": \"Baker Island\",\n                \"shortCode\": \"81\"\n            },\n            {\n                \"name\": \"Howland Island\",\n                \"shortCode\": \"84\"\n            },\n            {\n                \"name\": \"Jarvis Island\",\n                \"shortCode\": \"86\"\n            },\n            {\n                \"name\": \"Johnston Atoll\",\n                \"shortCode\": \"67\"\n            },\n            {\n                \"name\": \"Kingman Reef\",\n                \"shortCode\": \"89\"\n            },\n            {\n                \"name\": \"Midway Islands\",\n                \"shortCode\": \"71\"\n            },\n            {\n                \"name\": \"Navassa Island\",\n                \"shortCode\": \"76\"\n            },\n            {\n                \"name\": \"Palmyra Atoll\",\n                \"shortCode\": \"95\"\n            },\n            {\n                \"name\": \"Wake Island\",\n                \"shortCode\": \"79\"\n            },\n            {\n                \"name\": \"Bajo Nuevo Bank\",\n                \"shortCode\": \"BN\"\n            },\n            {\n                \"name\": \"Serranilla Bank\",\n                \"shortCode\": \"SB\"\n            }\n        ]\n    },\n\n]\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport MOCList from \"./MOCList\";\r\nimport {countries} from \"./Data\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\nconst MOCSelection = () => {\r\n  const classes = useStyles();\r\n\r\n  const [country, setCountry] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n\r\n  const handleChangeCountry = (event) => {\r\n    setCountry(event.target.value);\r\n  };\r\n\r\n  const handleChangeRegion = (event) => {\r\n    setRegion(event.target.value);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div>\r\n        Please select a country and region to find your Member of Congress Representative.\r\n      </div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"select-country-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"select-country-label\"\r\n          id=\"select-country\"\r\n          value={country}\r\n          onChange={handleChangeCountry}\r\n        >\r\n          {countries.map((country) => (\r\n            <MenuItem\r\n              value={country.countryName}\r\n              key={country.countryShortCode}\r\n            >\r\n              {country.countryName}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"select-region-label\">Region</InputLabel>\r\n        <Select\r\n          labelId=\"select-region-label\"\r\n          id=\"select-region\"\r\n          value={region}\r\n          onChange={handleChangeRegion}\r\n          disabled={!country}\r\n        >\r\n          {country\r\n            ? countries\r\n                .find(({ countryName }) => countryName === country)\r\n                .regions.map((region) => (\r\n                  <MenuItem value={region.shortCode} key={region.shortCode}>\r\n                    {region.name}\r\n                  </MenuItem>\r\n                ))\r\n            : []}\r\n        </Select>\r\n      </FormControl>\r\n      <br/>\r\n      <FormControl className={classes.formControl}>\r\n         <MOCList state={region} />\r\n       </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MOCSelection;\r\n","//import react\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\n// @dev Displays the details from a file uploaded to pinata\r\nfunction About(props)  {\r\n  const { id, URI } = useParams();\r\n\r\n  useLayoutEffect(() => {\r\n    // get details from IPFS using the url stored in listings\r\n    //fetchIPFS(props.URI);\r\n }, []);\r\n\r\n\r\n\r\nreturn (\r\n    <div  className=\"main\">\r\n      Coming Soon......About\r\n    </div>\r\n);\r\n}\r\n\r\nexport default About\r\n","//import react\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\n\r\n\r\n// @dev Displays the details from a file uploaded to pinata\r\nfunction Home(props)  {\r\nreturn (\r\n    <div className=\"main\" >\r\n\r\n      Coming Soon......Home\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Home\r\n","//import react\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport {\r\n  connectWallet,\r\n  getCurrentWalletConnected  //import here\r\n} from \"./connection\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// @dev Displays the details from a file uploaded to pinata\r\nfunction ConnectButton(props)  {\r\n  //State variables\r\n    const [walletAddress, setWallet] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    //const [networkId, setNetworkId] = useState(\"\");\r\n    const [networkName, setNetworkName] = useState(\"\");\r\n\r\n    useLayoutEffect(() => {\r\n\r\n      function addNetworkListner() {\r\n        if (window.ethereum) {\r\n           window.ethereum.on('chainChanged', function(networkId){\r\n\r\n             if (networkId.length > 0) {\r\n                connectWalletPressed();\r\n                window.location.reload();\r\n              };\r\n            });\r\n          }\r\n      };\r\n      // detect account  change and connect to new network\r\n      function addWalletListener() {\r\n        if (window.ethereum) {\r\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n            if (accounts.length > 0) {\r\n              connectWalletPressed();\r\n              window.location.reload();\r\n            };\r\n          });\r\n        };\r\n      };\r\n      async function connectToNetwork() {\r\n\r\n         const {address, status, networkId, networkName } = await getCurrentWalletConnected();\r\n         setWallet(address);\r\n         setStatus(status);\r\n         setWallet(address);\r\n         setNetworkName(networkName);\r\n\r\n       };\r\n     connectToNetwork();\r\n      addWalletListener();\r\n      addNetworkListner();\r\n    }, [] );\r\n\r\n\r\n // detect Network  change and connect to new network\r\n const connectWalletPressed = async () => {\r\n   const walletResponse = await connectWallet();\r\n   setStatus(walletResponse.status);\r\n   setWallet(walletResponse.address);\r\n   //setNetworkId(walletResponse.networkId);\r\n   setNetworkName(walletResponse.networkName);\r\n };\r\n\r\n\r\nreturn (\r\n  <div align=\"center\">\r\n  <Button variant=\"outlined\" onClick={connectWalletPressed} color=\"inherit\">\r\n        {(networkName.length >0 && walletAddress.length > 0) ? (\r\n          \" Connected: \" +\r\n          String(networkName) +\r\n          \" : \" +\r\n          String(walletAddress).substring(0, 6) +\r\n          \"...\" +\r\n          String(walletAddress).substring(38)\r\n        ) : (\r\n          <span>Connect Wallet</span>\r\n        )}\r\n\r\n      </Button>\r\n      <div>\r\n            {status}\r\n      </div>\r\n      <br/>\r\n      <br/>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ConnectButton\r\n","\nimport React, { useState, useLayoutEffect } from \"react\";\n\nimport Link from \"@material-ui/core/Link\";\nimport { BrowserRouter as Router, Route, Link as RouterLink, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport MOCSelection from \"./components/MOCSelection\";\n//import AddMOC from \"./components/AddMOC\";\nimport MOCProfile from \"./components/MOCProfile\";\nimport About from \"./components/About\";\nimport Home from \"./components/Home\";\nimport ConnectButton from \"./components/ConnectButton\";\n\n\nconst App = () => {\n\n\n  return (\n      <div>\n      <ConnectButton />\n      <Router>\n        <div className=\"nav\"  align=\"center\">\n          <div className=\"navigationItem\">\n            <Link component={RouterLink} to=\"/\"> Home\n            </Link>\n          </div>\n          <div className=\"navigationItem\">\n            <Link component={RouterLink} to=\"/About\">About </Link>\n          </div>\n          <div className=\"navigationItem\">\n            <Link component={RouterLink} to=\"/MOCSelection\">\n                Find Your MOC\n            </Link>\n          </div>\n        </div>\n        <br/>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/About\" component={About}/>\n        <Route path=\"/MOCSelection/\" component={MOCSelection}/>\n        <Route path=\"/MOCProfile/:id/:state/:URI\" component={MOCProfile}/>\n      </Switch>\n      </Router>\n\n      </div>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}